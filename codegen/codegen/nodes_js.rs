use lib_ruby_parser_nodes::template::*;

const TEMPLATE: &str = "// This file is autogenerated by {{ helper generated-by }}

class Node {}
const nodes = {};

(function() {

{{ each node }}<dnl>
class {{ helper node-camelcase-name }} extends Node {
    constructor(
{{ each node-field }}<dnl>
        {{ helper node-field-js-name }},
{{ end }}<dnl>
    ) {
        super();
{{ each node-field }}<dnl>
        this.{{ helper node-field-js-name }} = {{ helper node-field-js-name }};
{{ end }}<dnl>
    }
}
nodes.{{ helper node-camelcase-name }} = {{ helper node-camelcase-name }};
{{ end }}<dnl>

})();

root.Node = Node;
root.nodes = nodes;
";

pub(crate) fn codegen() {
    let template = TemplateRoot::new(TEMPLATE).unwrap();
    let fns = crate::codegen::fns::default_fns!();

    let contents = template.render(ALL_DATA, &fns);
    std::fs::write("../js/nodes.js", contents).unwrap();
}
