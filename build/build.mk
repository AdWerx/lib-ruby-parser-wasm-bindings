JS_FILES += js/types.js
JS_FILES += js/messages.js
JS_FILES += js/nodes.js

RS_FILES += bindings/src/lib.rs
RS_FILES += bindings/src/messages.rs
RS_FILES += bindings/src/nodes.rs

ifndef TARGET
$(error TARGET variable is required)
endif

ifeq ($(TARGET),nodejs)
ENV = nodejs
else
ifeq ($(TARGET),no-modules)
ENV = web
else
$(error TARGET can only be `nodejs` or `no-modules`, but `$(TARGET)` was passed)
endif
endif

$(info TARGET = $(TARGET))

RUN_WASM_PACK = cd bindings && \
	wasm-pack build --release --target $(TARGET) && \
	cd .. && \
	cp bindings/pkg/lib_ruby_parser_wasm.js build/$(ENV)-lib-ruby-parser-wrapper.js && \
	cp bindings/pkg/lib_ruby_parser_wasm_bg.wasm build/$(ENV)-lib-ruby-parser.wasm

# WASM wrapper generated by wasm-pack
build/$(ENV)-lib-ruby-parser-wrapper.js: $(RS_FILES)
	$(RUN_WASM_PACK)

build/$(ENV)-lib-ruby-parser.wasm: $(RS_FILES)
	$(RUN_WASM_PACK)

build/$(ENV)-lib-ruby-parser.js: build/scripts/merge.js build/$(ENV)-lib-ruby-parser-wrapper.js $(JS_FILES)
	ENV=$(ENV) node build/scripts/merge.js

CLEAN += build/web-lib-ruby-parser-wrapper.js
CLEAN += build/web-lib-ruby-parser.wasm
CLEAN += build/web-lib-ruby-parser.js
CLEAN += build/nodejs-lib-ruby-parser-wrapper.js
CLEAN += build/nodejs-lib-ruby-parser.wasm
CLEAN += build/nodejs-lib-ruby-parser.js
